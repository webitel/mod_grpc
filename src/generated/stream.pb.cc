// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: stream.proto
// Protobuf C++ Version: 5.29.0

#include "stream.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace amd {

inline constexpr StreamPCMResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : results_{},
        result_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamPCMResponse::StreamPCMResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamPCMResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamPCMResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamPCMResponseDefaultTypeInternal() {}
  union {
    StreamPCMResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamPCMResponseDefaultTypeInternal _StreamPCMResponse_default_instance_;

inline constexpr StreamPCMRequest_Metadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mime_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_id_{::int64_t{0}},
        sample_rate_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamPCMRequest_Metadata::StreamPCMRequest_Metadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamPCMRequest_MetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamPCMRequest_MetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamPCMRequest_MetadataDefaultTypeInternal() {}
  union {
    StreamPCMRequest_Metadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamPCMRequest_MetadataDefaultTypeInternal _StreamPCMRequest_Metadata_default_instance_;

inline constexpr StreamPCMRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vad_{0},
        data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StreamPCMRequest::StreamPCMRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamPCMRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamPCMRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamPCMRequestDefaultTypeInternal() {}
  union {
    StreamPCMRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamPCMRequestDefaultTypeInternal _StreamPCMRequest_default_instance_;
}  // namespace amd
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_stream_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_stream_2eproto = nullptr;
const ::uint32_t
    TableStruct_stream_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest_Metadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest_Metadata, _impl_.domain_id_),
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest_Metadata, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest_Metadata, _impl_.mime_type_),
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest_Metadata, _impl_.uuid_),
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest_Metadata, _impl_.sample_rate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest, _impl_.vad_),
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::amd::StreamPCMResponse, _impl_.results_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::amd::StreamPCMRequest_Metadata)},
        {13, -1, -1, sizeof(::amd::StreamPCMRequest)},
        {25, -1, -1, sizeof(::amd::StreamPCMResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::amd::_StreamPCMRequest_Metadata_default_instance_._instance,
    &::amd::_StreamPCMRequest_default_instance_._instance,
    &::amd::_StreamPCMResponse_default_instance_._instance,
};
const char descriptor_table_protodef_stream_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014stream.proto\022\003amd\"\317\001\n\020StreamPCMRequest"
    "\0222\n\010metadata\030\001 \001(\0132\036.amd.StreamPCMReques"
    "t.MetadataH\000\022\017\n\005chunk\030\002 \001(\014H\000\022\013\n\003vad\030\003 \001"
    "(\005\032a\n\010Metadata\022\021\n\tdomain_id\030\001 \001(\003\022\014\n\004nam"
    "e\030\002 \001(\t\022\021\n\tmime_type\030\003 \001(\t\022\014\n\004uuid\030\004 \001(\t"
    "\022\023\n\013sample_rate\030\005 \001(\005B\006\n\004data\"4\n\021StreamP"
    "CMResponse\022\016\n\006result\030\001 \001(\t\022\017\n\007results\030\002 "
    "\003(\t*3\n\020UploadStatusCode\022\013\n\007Unknown\020\000\022\006\n\002"
    "Ok\020\001\022\n\n\006Failed\020\0022G\n\003Api\022@\n\tStreamPCM\022\025.a"
    "md.StreamPCMRequest\032\026.amd.StreamPCMRespo"
    "nse\"\000(\0010\001b\006proto3"
};
static ::absl::once_flag descriptor_table_stream_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_stream_2eproto = {
    false,
    false,
    417,
    descriptor_table_protodef_stream_2eproto,
    "stream.proto",
    &descriptor_table_stream_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_stream_2eproto::offsets,
    file_level_enum_descriptors_stream_2eproto,
    file_level_service_descriptors_stream_2eproto,
};
namespace amd {
const ::google::protobuf::EnumDescriptor* UploadStatusCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_stream_2eproto);
  return file_level_enum_descriptors_stream_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t UploadStatusCode_internal_data_[] = {
    196608u, 0u, };
bool UploadStatusCode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class StreamPCMRequest_Metadata::_Internal {
 public:
};

StreamPCMRequest_Metadata::StreamPCMRequest_Metadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:amd.StreamPCMRequest.Metadata)
}
inline PROTOBUF_NDEBUG_INLINE StreamPCMRequest_Metadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::amd::StreamPCMRequest_Metadata& from_msg)
      : name_(arena, from.name_),
        mime_type_(arena, from.mime_type_),
        uuid_(arena, from.uuid_),
        _cached_size_{0} {}

StreamPCMRequest_Metadata::StreamPCMRequest_Metadata(
    ::google::protobuf::Arena* arena,
    const StreamPCMRequest_Metadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamPCMRequest_Metadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, domain_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, domain_id_),
           offsetof(Impl_, sample_rate_) -
               offsetof(Impl_, domain_id_) +
               sizeof(Impl_::sample_rate_));

  // @@protoc_insertion_point(copy_constructor:amd.StreamPCMRequest.Metadata)
}
inline PROTOBUF_NDEBUG_INLINE StreamPCMRequest_Metadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        mime_type_(arena),
        uuid_(arena),
        _cached_size_{0} {}

inline void StreamPCMRequest_Metadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, domain_id_),
           0,
           offsetof(Impl_, sample_rate_) -
               offsetof(Impl_, domain_id_) +
               sizeof(Impl_::sample_rate_));
}
StreamPCMRequest_Metadata::~StreamPCMRequest_Metadata() {
  // @@protoc_insertion_point(destructor:amd.StreamPCMRequest.Metadata)
  SharedDtor(*this);
}
inline void StreamPCMRequest_Metadata::SharedDtor(MessageLite& self) {
  StreamPCMRequest_Metadata& this_ = static_cast<StreamPCMRequest_Metadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.mime_type_.Destroy();
  this_._impl_.uuid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StreamPCMRequest_Metadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StreamPCMRequest_Metadata(arena);
}
constexpr auto StreamPCMRequest_Metadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamPCMRequest_Metadata),
                                            alignof(StreamPCMRequest_Metadata));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StreamPCMRequest_Metadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StreamPCMRequest_Metadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StreamPCMRequest_Metadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StreamPCMRequest_Metadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StreamPCMRequest_Metadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StreamPCMRequest_Metadata>(), &StreamPCMRequest_Metadata::ByteSizeLong,
            &StreamPCMRequest_Metadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_._cached_size_),
        false,
    },
    &StreamPCMRequest_Metadata::kDescriptorMethods,
    &descriptor_table_stream_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StreamPCMRequest_Metadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 55, 2> StreamPCMRequest_Metadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::amd::StreamPCMRequest_Metadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 domain_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StreamPCMRequest_Metadata, _impl_.domain_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.domain_id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.name_)}},
    // string mime_type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.mime_type_)}},
    // string uuid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.uuid_)}},
    // int32 sample_rate = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamPCMRequest_Metadata, _impl_.sample_rate_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.sample_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 domain_id = 1;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.domain_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mime_type = 3;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.mime_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string uuid = 4;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sample_rate = 5;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.sample_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\35\0\4\11\4\0\0\0"
    "amd.StreamPCMRequest.Metadata"
    "name"
    "mime_type"
    "uuid"
  }},
};

PROTOBUF_NOINLINE void StreamPCMRequest_Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:amd.StreamPCMRequest.Metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.mime_type_.ClearToEmpty();
  _impl_.uuid_.ClearToEmpty();
  ::memset(&_impl_.domain_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sample_rate_) -
      reinterpret_cast<char*>(&_impl_.domain_id_)) + sizeof(_impl_.sample_rate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamPCMRequest_Metadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamPCMRequest_Metadata& this_ = static_cast<const StreamPCMRequest_Metadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamPCMRequest_Metadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamPCMRequest_Metadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:amd.StreamPCMRequest.Metadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 domain_id = 1;
          if (this_._internal_domain_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_domain_id(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "amd.StreamPCMRequest.Metadata.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string mime_type = 3;
          if (!this_._internal_mime_type().empty()) {
            const std::string& _s = this_._internal_mime_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "amd.StreamPCMRequest.Metadata.mime_type");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string uuid = 4;
          if (!this_._internal_uuid().empty()) {
            const std::string& _s = this_._internal_uuid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "amd.StreamPCMRequest.Metadata.uuid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 sample_rate = 5;
          if (this_._internal_sample_rate() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_sample_rate(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:amd.StreamPCMRequest.Metadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamPCMRequest_Metadata::ByteSizeLong(const MessageLite& base) {
          const StreamPCMRequest_Metadata& this_ = static_cast<const StreamPCMRequest_Metadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamPCMRequest_Metadata::ByteSizeLong() const {
          const StreamPCMRequest_Metadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:amd.StreamPCMRequest.Metadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string mime_type = 3;
            if (!this_._internal_mime_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mime_type());
            }
            // string uuid = 4;
            if (!this_._internal_uuid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uuid());
            }
            // int64 domain_id = 1;
            if (this_._internal_domain_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_domain_id());
            }
            // int32 sample_rate = 5;
            if (this_._internal_sample_rate() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sample_rate());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamPCMRequest_Metadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamPCMRequest_Metadata*>(&to_msg);
  auto& from = static_cast<const StreamPCMRequest_Metadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:amd.StreamPCMRequest.Metadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_mime_type().empty()) {
    _this->_internal_set_mime_type(from._internal_mime_type());
  }
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (from._internal_domain_id() != 0) {
    _this->_impl_.domain_id_ = from._impl_.domain_id_;
  }
  if (from._internal_sample_rate() != 0) {
    _this->_impl_.sample_rate_ = from._impl_.sample_rate_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamPCMRequest_Metadata::CopyFrom(const StreamPCMRequest_Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:amd.StreamPCMRequest.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamPCMRequest_Metadata::InternalSwap(StreamPCMRequest_Metadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mime_type_, &other->_impl_.mime_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.sample_rate_)
      + sizeof(StreamPCMRequest_Metadata::_impl_.sample_rate_)
      - PROTOBUF_FIELD_OFFSET(StreamPCMRequest_Metadata, _impl_.domain_id_)>(
          reinterpret_cast<char*>(&_impl_.domain_id_),
          reinterpret_cast<char*>(&other->_impl_.domain_id_));
}

::google::protobuf::Metadata StreamPCMRequest_Metadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamPCMRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::amd::StreamPCMRequest, _impl_._oneof_case_);
};

void StreamPCMRequest::set_allocated_metadata(::amd::StreamPCMRequest_Metadata* metadata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = metadata->GetArena();
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(message_arena, metadata, submessage_arena);
    }
    set_has_metadata();
    _impl_.data_.metadata_ = metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:amd.StreamPCMRequest.metadata)
}
StreamPCMRequest::StreamPCMRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:amd.StreamPCMRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamPCMRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::amd::StreamPCMRequest& from_msg)
      : data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

StreamPCMRequest::StreamPCMRequest(
    ::google::protobuf::Arena* arena,
    const StreamPCMRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamPCMRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.vad_ = from._impl_.vad_;
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kMetadata:
        _impl_.data_.metadata_ = ::google::protobuf::Message::CopyConstruct<::amd::StreamPCMRequest_Metadata>(arena, *from._impl_.data_.metadata_);
        break;
      case kChunk:
        new (&_impl_.data_.chunk_) decltype(_impl_.data_.chunk_){arena, from._impl_.data_.chunk_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:amd.StreamPCMRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamPCMRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void StreamPCMRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.vad_ = {};
}
StreamPCMRequest::~StreamPCMRequest() {
  // @@protoc_insertion_point(destructor:amd.StreamPCMRequest)
  SharedDtor(*this);
}
inline void StreamPCMRequest::SharedDtor(MessageLite& self) {
  StreamPCMRequest& this_ = static_cast<StreamPCMRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_data()) {
    this_.clear_data();
  }
  this_._impl_.~Impl_();
}

void StreamPCMRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:amd.StreamPCMRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kMetadata: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.metadata_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.metadata_);
      }
      break;
    }
    case kChunk: {
      _impl_.data_.chunk_.Destroy();
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


inline void* StreamPCMRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StreamPCMRequest(arena);
}
constexpr auto StreamPCMRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StreamPCMRequest),
                                            alignof(StreamPCMRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StreamPCMRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StreamPCMRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StreamPCMRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StreamPCMRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StreamPCMRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StreamPCMRequest>(), &StreamPCMRequest::ByteSizeLong,
            &StreamPCMRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StreamPCMRequest, _impl_._cached_size_),
        false,
    },
    &StreamPCMRequest::kDescriptorMethods,
    &descriptor_table_stream_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StreamPCMRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 1, 0, 2> StreamPCMRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::amd::StreamPCMRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 vad = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamPCMRequest, _impl_.vad_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMRequest, _impl_.vad_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .amd.StreamPCMRequest.Metadata metadata = 1;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest, _impl_.data_.metadata_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes chunk = 2;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest, _impl_.data_.chunk_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 vad = 3;
    {PROTOBUF_FIELD_OFFSET(StreamPCMRequest, _impl_.vad_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::amd::StreamPCMRequest_Metadata>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StreamPCMRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:amd.StreamPCMRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vad_ = 0;
  clear_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamPCMRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamPCMRequest& this_ = static_cast<const StreamPCMRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamPCMRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamPCMRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:amd.StreamPCMRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.data_case()) {
            case kMetadata: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.data_.metadata_, this_._impl_.data_.metadata_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kChunk: {
              const std::string& _s = this_._internal_chunk();
              target = stream->WriteBytesMaybeAliased(2, _s, target);
              break;
            }
            default:
              break;
          }
          // int32 vad = 3;
          if (this_._internal_vad() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_vad(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:amd.StreamPCMRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamPCMRequest::ByteSizeLong(const MessageLite& base) {
          const StreamPCMRequest& this_ = static_cast<const StreamPCMRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamPCMRequest::ByteSizeLong() const {
          const StreamPCMRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:amd.StreamPCMRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 vad = 3;
            if (this_._internal_vad() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_vad());
            }
          }
          switch (this_.data_case()) {
            // .amd.StreamPCMRequest.Metadata metadata = 1;
            case kMetadata: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.metadata_);
              break;
            }
            // bytes chunk = 2;
            case kChunk: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_chunk());
              break;
            }
            case DATA_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamPCMRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamPCMRequest*>(&to_msg);
  auto& from = static_cast<const StreamPCMRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:amd.StreamPCMRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vad() != 0) {
    _this->_impl_.vad_ = from._impl_.vad_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMetadata: {
        if (oneof_needs_init) {
          _this->_impl_.data_.metadata_ =
              ::google::protobuf::Message::CopyConstruct<::amd::StreamPCMRequest_Metadata>(arena, *from._impl_.data_.metadata_);
        } else {
          _this->_impl_.data_.metadata_->MergeFrom(from._internal_metadata());
        }
        break;
      }
      case kChunk: {
        if (oneof_needs_init) {
          _this->_impl_.data_.chunk_.InitDefault();
        }
        _this->_impl_.data_.chunk_.Set(from._internal_chunk(), arena);
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamPCMRequest::CopyFrom(const StreamPCMRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:amd.StreamPCMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamPCMRequest::InternalSwap(StreamPCMRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.vad_, other->_impl_.vad_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StreamPCMRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamPCMResponse::_Internal {
 public:
};

StreamPCMResponse::StreamPCMResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:amd.StreamPCMResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamPCMResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::amd::StreamPCMResponse& from_msg)
      : results_{visibility, arena, from.results_},
        result_(arena, from.result_),
        _cached_size_{0} {}

StreamPCMResponse::StreamPCMResponse(
    ::google::protobuf::Arena* arena,
    const StreamPCMResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamPCMResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:amd.StreamPCMResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamPCMResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : results_{visibility, arena},
        result_(arena),
        _cached_size_{0} {}

inline void StreamPCMResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StreamPCMResponse::~StreamPCMResponse() {
  // @@protoc_insertion_point(destructor:amd.StreamPCMResponse)
  SharedDtor(*this);
}
inline void StreamPCMResponse::SharedDtor(MessageLite& self) {
  StreamPCMResponse& this_ = static_cast<StreamPCMResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StreamPCMResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StreamPCMResponse(arena);
}
constexpr auto StreamPCMResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StreamPCMResponse, _impl_.results_) +
          decltype(StreamPCMResponse::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(StreamPCMResponse), alignof(StreamPCMResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StreamPCMResponse::PlacementNew_,
                                 sizeof(StreamPCMResponse),
                                 alignof(StreamPCMResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StreamPCMResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StreamPCMResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StreamPCMResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StreamPCMResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StreamPCMResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StreamPCMResponse>(), &StreamPCMResponse::ByteSizeLong,
            &StreamPCMResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StreamPCMResponse, _impl_._cached_size_),
        false,
    },
    &StreamPCMResponse::kDescriptorMethods,
    &descriptor_table_stream_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StreamPCMResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> StreamPCMResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::amd::StreamPCMResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string results = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMResponse, _impl_.results_)}},
    // string result = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPCMResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string result = 1;
    {PROTOBUF_FIELD_OFFSET(StreamPCMResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string results = 2;
    {PROTOBUF_FIELD_OFFSET(StreamPCMResponse, _impl_.results_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\25\6\7\0\0\0\0\0"
    "amd.StreamPCMResponse"
    "result"
    "results"
  }},
};

PROTOBUF_NOINLINE void StreamPCMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:amd.StreamPCMResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamPCMResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamPCMResponse& this_ = static_cast<const StreamPCMResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamPCMResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamPCMResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:amd.StreamPCMResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string result = 1;
          if (!this_._internal_result().empty()) {
            const std::string& _s = this_._internal_result();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "amd.StreamPCMResponse.result");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string results = 2;
          for (int i = 0, n = this_._internal_results_size(); i < n; ++i) {
            const auto& s = this_._internal_results().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "amd.StreamPCMResponse.results");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:amd.StreamPCMResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamPCMResponse::ByteSizeLong(const MessageLite& base) {
          const StreamPCMResponse& this_ = static_cast<const StreamPCMResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamPCMResponse::ByteSizeLong() const {
          const StreamPCMResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:amd.StreamPCMResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string results = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_results().size());
              for (int i = 0, n = this_._internal_results().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_results().Get(i));
              }
            }
          }
           {
            // string result = 1;
            if (!this_._internal_result().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamPCMResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamPCMResponse*>(&to_msg);
  auto& from = static_cast<const StreamPCMResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:amd.StreamPCMResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(from._internal_results());
  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamPCMResponse::CopyFrom(const StreamPCMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:amd.StreamPCMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamPCMResponse::InternalSwap(StreamPCMResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_, &other->_impl_.result_, arena);
}

::google::protobuf::Metadata StreamPCMResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace amd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_stream_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
