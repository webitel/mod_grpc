// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: push.proto

#include "push.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace engine {
PROTOBUF_CONSTEXPR SendPushRequest_DataEntry_DoNotUse::SendPushRequest_DataEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SendPushRequest_DataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPushRequest_DataEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPushRequest_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SendPushRequest_DataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPushRequest_DataEntry_DoNotUseDefaultTypeInternal _SendPushRequest_DataEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SendPushRequest::SendPushRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.android_)*/{}
  , /*decltype(_impl_.apple_)*/{}
  , /*decltype(_impl_.data_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.expiration_)*/int64_t{0}
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPushRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPushRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPushRequestDefaultTypeInternal() {}
  union {
    SendPushRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPushRequestDefaultTypeInternal _SendPushRequest_default_instance_;
PROTOBUF_CONSTEXPR SendPushResponse::SendPushResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.send_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPushResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPushResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPushResponseDefaultTypeInternal() {}
  union {
    SendPushResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPushResponseDefaultTypeInternal _SendPushResponse_default_instance_;
}  // namespace engine
static ::_pb::Metadata file_level_metadata_push_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_push_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_push_2eproto = nullptr;

const uint32_t TableStruct_push_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest, _impl_.android_),
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest, _impl_.apple_),
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest, _impl_.expiration_),
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::engine::SendPushRequest, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::engine::SendPushResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::engine::SendPushResponse, _impl_.send_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::engine::SendPushRequest_DataEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::engine::SendPushRequest)},
  { 21, -1, -1, sizeof(::engine::SendPushResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::engine::_SendPushRequest_DataEntry_DoNotUse_default_instance_._instance,
  &::engine::_SendPushRequest_default_instance_._instance,
  &::engine::_SendPushResponse_default_instance_._instance,
};

const char descriptor_table_protodef_push_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\npush.proto\022\006engine\"\265\001\n\017SendPushRequest"
  "\022\017\n\007android\030\001 \003(\t\022\r\n\005apple\030\002 \003(\t\022\022\n\nexpi"
  "ration\030\003 \001(\003\022\020\n\010priority\030\004 \001(\005\022/\n\004data\030\005"
  " \003(\0132!.engine.SendPushRequest.DataEntry\032"
  "+\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
  ":\0028\001\" \n\020SendPushResponse\022\014\n\004send\030\001 \001(\0052N"
  "\n\013PushService\022\?\n\010SendPush\022\027.engine.SendP"
  "ushRequest\032\030.engine.SendPushResponse\"\000B\""
  "Z github.com/webitel/protos/engineb\006prot"
  "o3"
  ;
static ::_pbi::once_flag descriptor_table_push_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_push_2eproto = {
    false, false, 362, descriptor_table_protodef_push_2eproto,
    "push.proto",
    &descriptor_table_push_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_push_2eproto::offsets,
    file_level_metadata_push_2eproto, file_level_enum_descriptors_push_2eproto,
    file_level_service_descriptors_push_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_push_2eproto_getter() {
  return &descriptor_table_push_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_push_2eproto(&descriptor_table_push_2eproto);
namespace engine {

// ===================================================================

SendPushRequest_DataEntry_DoNotUse::SendPushRequest_DataEntry_DoNotUse() {}
SendPushRequest_DataEntry_DoNotUse::SendPushRequest_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SendPushRequest_DataEntry_DoNotUse::MergeFrom(const SendPushRequest_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SendPushRequest_DataEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_push_2eproto_getter, &descriptor_table_push_2eproto_once,
      file_level_metadata_push_2eproto[0]);
}

// ===================================================================

class SendPushRequest::_Internal {
 public:
};

SendPushRequest::SendPushRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SendPushRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:engine.SendPushRequest)
}
SendPushRequest::SendPushRequest(const SendPushRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPushRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.android_){from._impl_.android_}
    , decltype(_impl_.apple_){from._impl_.apple_}
    , /*decltype(_impl_.data_)*/{}
    , decltype(_impl_.expiration_){}
    , decltype(_impl_.priority_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  ::memcpy(&_impl_.expiration_, &from._impl_.expiration_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.priority_) -
    reinterpret_cast<char*>(&_impl_.expiration_)) + sizeof(_impl_.priority_));
  // @@protoc_insertion_point(copy_constructor:engine.SendPushRequest)
}

inline void SendPushRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.android_){arena}
    , decltype(_impl_.apple_){arena}
    , /*decltype(_impl_.data_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.expiration_){int64_t{0}}
    , decltype(_impl_.priority_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendPushRequest::~SendPushRequest() {
  // @@protoc_insertion_point(destructor:engine.SendPushRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SendPushRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.android_.~RepeatedPtrField();
  _impl_.apple_.~RepeatedPtrField();
  _impl_.data_.Destruct();
  _impl_.data_.~MapField();
}

void SendPushRequest::ArenaDtor(void* object) {
  SendPushRequest* _this = reinterpret_cast< SendPushRequest* >(object);
  _this->_impl_.data_.Destruct();
}
void SendPushRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPushRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:engine.SendPushRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.android_.Clear();
  _impl_.apple_.Clear();
  _impl_.data_.Clear();
  ::memset(&_impl_.expiration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.priority_) -
      reinterpret_cast<char*>(&_impl_.expiration_)) + sizeof(_impl_.priority_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPushRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string android = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_android();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "engine.SendPushRequest.android"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string apple = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_apple();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "engine.SendPushRequest.apple"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 expiration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.expiration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 priority = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPushRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:engine.SendPushRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string android = 1;
  for (int i = 0, n = this->_internal_android_size(); i < n; i++) {
    const auto& s = this->_internal_android(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "engine.SendPushRequest.android");
    target = stream->WriteString(1, s, target);
  }

  // repeated string apple = 2;
  for (int i = 0, n = this->_internal_apple_size(); i < n; i++) {
    const auto& s = this->_internal_apple(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "engine.SendPushRequest.apple");
    target = stream->WriteString(2, s, target);
  }

  // int64 expiration = 3;
  if (this->_internal_expiration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_expiration(), target);
  }

  // int32 priority = 4;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_priority(), target);
  }

  // map<string, string> data = 5;
  if (!this->_internal_data().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = SendPushRequest_DataEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_data();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "engine.SendPushRequest.DataEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "engine.SendPushRequest.DataEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:engine.SendPushRequest)
  return target;
}

size_t SendPushRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:engine.SendPushRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string android = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.android_.size());
  for (int i = 0, n = _impl_.android_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.android_.Get(i));
  }

  // repeated string apple = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.apple_.size());
  for (int i = 0, n = _impl_.apple_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.apple_.Get(i));
  }

  // map<string, string> data = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += SendPushRequest_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int64 expiration = 3;
  if (this->_internal_expiration() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_expiration());
  }

  // int32 priority = 4;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPushRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPushRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPushRequest::GetClassData() const { return &_class_data_; }


void SendPushRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPushRequest*>(&to_msg);
  auto& from = static_cast<const SendPushRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:engine.SendPushRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.android_.MergeFrom(from._impl_.android_);
  _this->_impl_.apple_.MergeFrom(from._impl_.apple_);
  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  if (from._internal_expiration() != 0) {
    _this->_internal_set_expiration(from._internal_expiration());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPushRequest::CopyFrom(const SendPushRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:engine.SendPushRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPushRequest::IsInitialized() const {
  return true;
}

void SendPushRequest::InternalSwap(SendPushRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.android_.InternalSwap(&other->_impl_.android_);
  _impl_.apple_.InternalSwap(&other->_impl_.apple_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendPushRequest, _impl_.priority_)
      + sizeof(SendPushRequest::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(SendPushRequest, _impl_.expiration_)>(
          reinterpret_cast<char*>(&_impl_.expiration_),
          reinterpret_cast<char*>(&other->_impl_.expiration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPushRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_push_2eproto_getter, &descriptor_table_push_2eproto_once,
      file_level_metadata_push_2eproto[1]);
}

// ===================================================================

class SendPushResponse::_Internal {
 public:
};

SendPushResponse::SendPushResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:engine.SendPushResponse)
}
SendPushResponse::SendPushResponse(const SendPushResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPushResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.send_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.send_ = from._impl_.send_;
  // @@protoc_insertion_point(copy_constructor:engine.SendPushResponse)
}

inline void SendPushResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.send_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendPushResponse::~SendPushResponse() {
  // @@protoc_insertion_point(destructor:engine.SendPushResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPushResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SendPushResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPushResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:engine.SendPushResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.send_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPushResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 send = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.send_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPushResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:engine.SendPushResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 send = 1;
  if (this->_internal_send() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_send(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:engine.SendPushResponse)
  return target;
}

size_t SendPushResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:engine.SendPushResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 send = 1;
  if (this->_internal_send() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_send());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPushResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPushResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPushResponse::GetClassData() const { return &_class_data_; }


void SendPushResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPushResponse*>(&to_msg);
  auto& from = static_cast<const SendPushResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:engine.SendPushResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_send() != 0) {
    _this->_internal_set_send(from._internal_send());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPushResponse::CopyFrom(const SendPushResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:engine.SendPushResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPushResponse::IsInitialized() const {
  return true;
}

void SendPushResponse::InternalSwap(SendPushResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.send_, other->_impl_.send_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPushResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_push_2eproto_getter, &descriptor_table_push_2eproto_once,
      file_level_metadata_push_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace engine
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::engine::SendPushRequest_DataEntry_DoNotUse*
Arena::CreateMaybeMessage< ::engine::SendPushRequest_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::engine::SendPushRequest_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::engine::SendPushRequest*
Arena::CreateMaybeMessage< ::engine::SendPushRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::engine::SendPushRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::engine::SendPushResponse*
Arena::CreateMaybeMessage< ::engine::SendPushResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::engine::SendPushResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
